allprojects {
  repositories {
    jcenter()
    google()
  }
}

ext {
  //Android
  androidBuildToolsVersion = "26.0.2"
  androidMinSdkVersion = 14
  androidTargetSdkVersion = 26
  androidCompileSdkVersion = 26

  //Libraries
  supportLibraryVersion = '26.1.0'
  constraintVersion = '1.0.2'
  retrofitVersion = '2.3.0'
  gsonVersion = '2.8.2'
  glideVersion = '4.2.0'
  daggerVersion = '2.12'
  javaxInjectVersion = '1'
  archExtensionsVersion = '1.0.0'
  kotlinCoroutinesVersion = '0.19.3'

  //Testing
  jUnitVersion = '4.12'
  espressoVersion = '3.0.1'
  runnerVersion = '1.0.1'
  robolectricVersion = '3.4.2'
  hamcrestVersion = '1.3'
  mockitoVersion = '2.12.0'
  mockitoKotlinVersion = '1.5.0'

  dataDependencies = [kotlin                 : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
                      gson                   : "com.google.code.gson:gson:${gsonVersion}",
                      espressoIdlingResource : "com.android.support.test.espresso:espresso-idling-resource:${espressoVersion}",
                      retrofit               : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
                      retrofitGson           : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
                      javaxInject            : "javax.inject:javax.inject:${javaxInjectVersion}",
                      kotlinCoroutines       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
                      kotlinCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}",
                      room                   : "android.arch.persistence.room:runtime:${archExtensionsVersion}",
                      roomCompiler           : "android.arch.persistence.room:compiler:${archExtensionsVersion}",]

  dataTestDependencies = [junit                 : "junit:junit:${jUnitVersion}",
                          kotlinJUnit           : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
                          mockito               : "org.mockito:mockito-core:${mockitoVersion}",
                          mockitoKotlin         : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
                          espressoCore          : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
                          espressoContrib       : "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
                          espressoIdlingResource: "com.android.support.test.espresso:espresso-idling-resource:${espressoVersion}",
                          robolectric           : "org.robolectric:robolectric:${robolectricVersion}",
                          roomMigrations        : "android.arch.persistence.room:testing:${archExtensionsVersion}"]

  domainDependencies = [kotlin                 : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
                        javaxInject            : "javax.inject:javax.inject:${javaxInjectVersion}",
                        kotlinCoroutines       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
                        kotlinCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}"]

  domainTestDependencies = [junit        : "junit:junit:${jUnitVersion}",
                            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
                            mockito      : "org.mockito:mockito-core:${mockitoVersion}",
                            mockitoKotlin: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"]

  presentationDependencies = [kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
                              javaxInject     : "javax.inject:javax.inject:${javaxInjectVersion}",
                              kotlinCoroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
                              archExtensions  : "android.arch.lifecycle:extensions:${archExtensionsVersion}"]

  presentationTestDependencies = [junit          : "junit:junit:${jUnitVersion}",
                                  kotlinJUnit    : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
                                  mockito        : "org.mockito:mockito-core:${mockitoVersion}",
                                  mockitoKotlin  : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
                                  archCoreTesting: "android.arch.core:core-testing:${archExtensionsVersion}"]

  appDependencies = [kotlin                 : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
                     supportV7              : "com.android.support:appcompat-v7:${supportLibraryVersion}",
                     recyclerView           : "com.android.support:recyclerview-v7:${supportLibraryVersion}",
                     cardView               : "com.android.support:cardview-v7:${supportLibraryVersion}",
                     supportDesign          : "com.android.support:design:${supportLibraryVersion}",
                     supportConstraint      : "com.android.support.constraint:constraint-layout:${constraintVersion}",
                     glide                  : "com.github.bumptech.glide:glide:${glideVersion}",
                     dagger                 : "com.google.dagger:dagger:${daggerVersion}",
                     daggerCompiler         : "com.google.dagger:dagger-compiler:${daggerVersion}",
                     daggerAndroid          : "com.google.dagger:dagger-android:${daggerVersion}",
                     daggerAndroidSupport   : "com.google.dagger:dagger-android-support:${daggerVersion}",
                     daggerAndroidCompiler  : "com.google.dagger:dagger-android-processor:${daggerVersion}",
                     javaxInject            : "javax.inject:javax.inject:${javaxInjectVersion}",
                     archExtensions         : "android.arch.lifecycle:extensions:${archExtensionsVersion}",
                     kotlinCoroutines       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
                     kotlinCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}"]

  appTestDependencies = [junit          : "junit:junit:${jUnitVersion}",
                         kotlinJUnit    : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
                         mockitoAndroid : "org.mockito:mockito-android:${mockitoVersion}",
                         mockitoKotlin  : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
                         espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
                         espressoContrib: "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
                         androidRunner  : "com.android.support.test:runner:${runnerVersion}",
                         androidRules   : "com.android.support.test:rules:${runnerVersion}",
                         hamcrest       : "org.hamcrest:hamcrest-all:${hamcrestVersion}",
                         robolectric    : "org.robolectric:robolectric:${robolectricVersion}",
                         daggerCompiler : "com.google.dagger:dagger-compiler:${daggerVersion}"]

  injectionDependencies = [kotlin                 : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
                           espressoIdlingResource : "com.android.support.test.espresso:espresso-idling-resource:${espressoVersion}",
                           dagger                 : "com.google.dagger:dagger:${daggerVersion}",
                           daggerCompiler         : "com.google.dagger:dagger-compiler:${daggerVersion}",
                           daggerAndroid          : "com.google.dagger:dagger-android:${daggerVersion}",
                           daggerAndroidSupport   : "com.google.dagger:dagger-android-support:${daggerVersion}",
                           daggerAndroidCompiler  : "com.google.dagger:dagger-android-processor:${daggerVersion}",
                           javaxInject            : "javax.inject:javax.inject:${javaxInjectVersion}",
                           archExtensions         : "android.arch.lifecycle:extensions:${archExtensionsVersion}",
                           kotlinCoroutines       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
                           kotlinCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}"]
}